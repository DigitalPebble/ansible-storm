---
 
- hosts: all
  become: yes

  vars: 
    storm_version: 2.4.0
    # get IP of master from hostvars
    master_ip: "{{ hostvars[groups['storm_master'][0]]['ansible_fqdn'] }}"

  gather_facts: yes
  pre_tasks:
    - name: Install python for Ansible
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
      changed_when: False
    - setup: # aka gather_facts

  tasks:
   - debug: var=master_ip

   - apt:
      name: openjdk-8-jdk
      state: present
      update_cache: yes
      force: yes

   - group: name=storm system=yes state=present

   - name: Create Storm User
     user: name=storm system=yes createhome=false group=storm

   - name: Download Apache Storm {{ storm_version }}
     get_url: 
       url: "http://www.mirrorservice.org/sites/ftp.apache.org/storm/apache-storm-{{ storm_version }}/apache-storm-{{ storm_version }}.tar.gz"
       dest: /tmp/
       owner: storm
       group: storm
       timeout: 600
       force: yes

   - name: Unarchive Apache Storm
     unarchive:
       src: /tmp/apache-storm-{{ storm_version }}.tar.gz
       dest: /usr/share/
       owner: storm
       group: storm
       remote_src: yes

   - file:
       path: "/usr/share/apache-storm-{{ storm_version }}"
       owner: "storm"
       group: "storm"
       mode: "u=rwx,g=rwx,o=r"
       recurse: yes
       state: directory

   - file:
       src: "/usr/share/apache-storm-{{ storm_version }}/bin/storm"
       dest: /usr/bin/storm
       owner: storm
       group: storm
       state: link

   - file:
       path: /var/log/storm
       owner: storm
       group: storm
       state: directory
       mode: "u=rwx,g=rwx,o=r"
       recurse: yes

   - file:
       path: /var/log/storm/workers-artifacts/
       owner: storm
       group: storm
       state: directory
       mode: "u=rwx,g=rwx,o=rwx"
       recurse: yes

   - template: src=Files/storm.yaml dest="/usr/share/apache-storm-{{ storm_version }}/conf/storm.yaml"

   - template: src=Files/stormservicetemplate dest="/etc/systemd/system/storm-{{ item }}.service"
     with_items:
        - logviewer

   - systemd: state=started name={{ item }}.service daemon_reload=yes
     with_items:
        - storm-logviewer

- hosts: storm_master
  become: yes

  vars: 
    storm_version: 2.4.0
    zk_version: 3.7.0

  tasks:
   - group: name=zookeeper system=yes state=present

   - name: Create zookeeper User
     user: name=zookeeper system=yes createhome=false group=zookeeper

   - get_url: 
       url: "https://archive.apache.org/dist/zookeeper/zookeeper-{{ zk_version }}/apache-zookeeper-{{ zk_version }}-bin.tar.gz"
       dest: /tmp/
       owner: zookeeper
       group: zookeeper
       timeout: 600
       force: yes

   - unarchive:
       src: /tmp/apache-zookeeper-{{ zk_version }}-bin.tar.gz
       dest: /tmp
       owner: zookeeper
       group: zookeeper
       remote_src: yes

   - copy:
       src: "/tmp/apache-zookeeper-{{ zk_version }}-bin/"
       dest: /opt/zookeeper
       owner: zookeeper
       group: zookeeper
       remote_src: yes

   - name: Copy a new zk conf
     copy:
       src: /opt/zookeeper/conf/zoo_sample.cfg
       dest: /opt/zookeeper/conf/zoo.cfg
       owner: zookeeper
       group: zookeeper
       remote_src: yes

   - name: Add a line to a file if the file does not exist, without passing regexp
     lineinfile:
       path: /opt/zookeeper/conf/zoo.cfg
       line:  admin.enableServer=false

   - name: Copy ZK service file
     copy:
       src: Files/zookeeper.service
       dest: /etc/systemd/system/zookeeper.service
       remote_src: false

   - template: src=Files/stormservicetemplate dest="/etc/systemd/system/storm-{{ item }}.service"
     with_items:
        - nimbus
        - ui

   - systemd: state=started name={{ item }}.service daemon_reload=yes
     with_items:
        - zookeeper
        - storm-nimbus
        - storm-ui

- hosts: storm_worker
  become: yes

  vars: 
    storm_version: 2.4.0

  tasks:
   - template: src=Files/stormservicetemplate dest="/etc/systemd/system/storm-{{ item }}.service"
     with_items:
        - supervisor

   - systemd: state=started name={{ item }}.service daemon_reload=yes
     with_items:
        - storm-supervisor


